<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>标绘使用(地形)</title>
    <!-- 引入地图引擎库 -->
    <script include="engine:cesium" src="http://192.168.82.91:8086/static/libs/include-lib-local-upgrade.js"></script>
    <!-- 天地图Token -->
    <script src="http://192.168.82.91:8086/static/assets/js/TDT-token.js"></script>
    <!-- 行业标绘相关库 -->
    <script src="http://192.168.82.91:8086/static/libs/cdn/jquery/jquery-3.7.1.min.js"></script>
    <script src="http://192.168.82.91:8086/static/libs/cdn/zondyclient/webclient-plot.min.js"></script>
    <!-- menu -->
    <script src="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/PlotMenu/index.js"></script>
    <link rel="stylesheet" href="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/PlotMenu/index.css"/>
    <!-- editor -->
    <script src="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/Pickr/pickr.min.js"></script>
    <link rel="stylesheet" href="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/Pickr/nano.min.css"/>
    <script src="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/PlotStyleEditor/index.js"></script>
    <link rel="stylesheet" href="http://192.168.82.91:8086/static/libs/cdn/exampleThirdParty/plot-profess/PlotStyleEditor/index.css"/>
    <!--示例公共样式-->
    <link rel="stylesheet" href="http://192.168.82.91:8086/static/libs/css/style.css"/>
    <script type="text/javascript">
      //使用严格模式
      'use strict'
      // 定义视图的主要类
      let map, view, layer, drawTool, currentPlot, plotLayer, plotLayer3DGroup, plotEditor
      const { WebTileLayer, TerrainCacheLayer } = zondy.layer
      const { Map } = zondy
      const { Plot } = Zondy
      const {
        SymbolManager,
        FabricLayer,
        PlotLayer2DGroup,
        PlotLayer2D,
        DrawTool,
        PlotLayer3D,
        PlotLayer3DGroup
      } = Plot
      const symbolUrl = `http://192.168.82.91:8200/Plot/plot-sample/symbolLibs/标号库a/symbolLib.json`
      const symbolOptions = {
        fontURL: `http://192.168.82.91:8200/Plot/plot-sample/fonts/`,
        baseUrl: `http://192.168.82.91:8200/Plot/plot-sample/symbolLibs/标号库a/`
      }
      const { PlotMenu, PlotStyleEditor } = window.webclientPlot

      // 初始化地图
      function init() {
        // 初始化地图视图
        initView()
        // 视图加载完毕后，初始化行业标绘
        view.once('layerview-created', () => {
          // 创建符号管理器
          const manager = new SymbolManager(symbolUrl, symbolOptions)
          // 请求获取符号库
          manager.getSymbols().then(function () {
            // 初始化行业标绘3D
            initPlot3D()
            //初始化 ui 插件
            // 创建左侧符号目录树，并绑定绘制方法
            new PlotMenu(manager, function (id) {
              drawTool.stopDraw()
              drawTool.drawPlot(manager.getLeafByID(id))
            })
          })
        })
      }

      // 初始化行业标绘3D
      function initPlot3D() {
        const viewer = view.getInnerView()
        // 创建图层组
        plotLayer3DGroup = new PlotLayer3DGroup(viewer)
        // 创建三维图层
        plotLayer = new PlotLayer3D(Cesium, viewer, {
          //设置为贴场景模式
          classificationType: 0
        })
        // 设置图层标绘元素缩放比，默认为1
        plotLayer.setPlotSize(0.05)
        // 设置图层是否可编辑
        plotLayer.editable = false
        // 创建绘制工具
        drawTool = new DrawTool(plotLayer, {
          // 新增标绘对象回调
          addedPlot: function (plot) {
            plot.setStyle('isOpenWall', false)
            plot.setStyle('dimModHeight', 0)
          }
        })
        // 将三维图层添加到图层组内
        plotLayer3DGroup.addLayer(plotLayer)

        //点击获取要素
        plotLayer.editable = true
        plotLayer.pickPlot = function (plot) {
          // 获取选中的标绘元素
          currentPlot = plot
          if (!currentPlot) {
            plotEditor && plotEditor.destroyed()
            return
          }
          //初始化标绘图元样式编辑UI
          if (!plotEditor) {
            // 创建plotStyleEditor
            plotEditor = new PlotStyleEditor('plot-editor')
            // 监听属性变更事件
            plotEditor.on('attributes-change', (attr) => {
              currentPlot.setStyle(attr.type, attr.value, attr.key)
            })
          }

          // 获取标绘元素样式，更新样式面板
          var style = plot.getStyle()
          plot
            .getElement()
            .getSymbol()
            .getSvg()
            .then((svgDom) => {
              plotEditor.setAttrs(style, style.nodeStyles, {
                svgDom: svgDom
              })
            })
        }
      }

      //添加地形
      function addTerrainCacheLayer() {
        let terrainCacheLayer = new TerrainCacheLayer({
          // 服务基地址
          url: 'http://192.168.82.91:8200/3DData/TerrainCache/HubeiTerrain/'
        })
        map.add(terrainCacheLayer)
        // 图层加载完毕
        terrainCacheLayer.on(
          zondy.enum.LayerEventType.layerViewCreated,
          function (result) {
            console.log('加载完毕:', result.layer)
            // 视点跳转
            view.flyTo({
              center: [110.31, 31.48, 3000],
              orientation: {
                heading: Cesium.Math.toRadians(60), //方位角
                pitch: Cesium.Math.toRadians(-15), //俯仰角
                roll: 0 //翻滚角
              }
            })
          }
        )
      }

      // 初始二维地图
      function initView() {
        // 初始化图层管理容器
        map = new Map()
        // 初始化地图视图对象
        view = createView('mapgis-viewer', map)
        // 创建瓦片图层
        layer = new WebTileLayer({
          // 加载经纬度的影像地图
          url: 'http://t1.tianditu.com/DataServer?T=vec_c&x={col}&y={row}&l={level}',
          // 天地图必须加token，且token名为tk
          tokenKey: 'tk',
          // token请在天地图官网申请
          tokenValue: getTDTToken()
        })
        // 添加图层
        map.add(layer)
        //添加地形
        addTerrainCacheLayer()
      }
    </script>
</head>

<body onload="init();">
<div id="mapgis-viewer">
    <div id="side"></div>
    <div id="content" style="position: relative">
        <div id="plot-editor"></div>
    </div>
</div>
</body>
</html>
